var searchIndex = new Map(JSON.parse('[\
["rust_ml",{"doc":"Rust_ML Crate","t":"CCCCPIPCFGPPPPPNNNNNNNNNNNNNNNNNNNNPFGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNHHGKKPFFFFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPRKKNNNNNCNMMNNNCNMNNNCCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFFNNNNNNNNNNNNNNNNN","n":["base","dataset","linalg","preprocessing","Err","MLResult","Ok","error","Error","ErrorKind","InvalidData","InvalidParameters","InvalidState","LinAlgError","UntrainedModel","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","into","into","kind","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Categorical","Dataset","MixedDataValue","MixedDataset","Numeric","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","data","data_columns","data_columns","eq","fmt","fmt","fmt","from","from","from","from_csv","from_csv","into","into","into","iris","new","new","pokemon","target","target","target_column","target_column","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","load","load","Axes","BaseMatrix","BaseMatrixMut","Col","Column","Matrix","MatrixSlice","MatrixSliceMut","Row","Vector","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","apply","apply","argmax","argmin","as_mut_ptr","as_mut_ptr","as_mut_ptr","as_mut_slice","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_slice","bidiagonal_decomp","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cholesky","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","col","col_iter","col_iter_mut","col_mut","col_unchecked","col_unchecked_mut","cols","cols","cols","cols","cols","data","data","deref","det","diag","diag_iter","diag_iter_mut","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","eigendecomp","eigenvalues","elediv","elediv","elediv","elemul","elemul","elemul","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_diag","from_fn","from_fn","from_iter","from_iter","from_iter","from_iter","from_matrix","from_matrix","from_raw_parts","from_raw_parts","get_unchecked","get_unchecked","get_unchecked_mut","get_unchecked_mut","hash","hash","hcat","identity","index","index","index","index","index","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_matrix","into_matrix","into_vec","into_vec","inverse","is_diag","is_empty","is_empty","iter","iter","iter_mut","iter_mut","lup_decomp","max","mean","mean","metric","metric","min","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mut_data","mut_data","neg","neg","neg","neg","neg","neg","neg","neg","new","new","norm","norm","not","not","ones","ones","qr_decomp","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","row","row_iter","row_iter_mut","row_mut","row_stride","row_stride","row_stride","row_stride","row_stride","row_unchecked","row_unchecked_mut","rows","rows","rows","rows","rows","select","select","select_cols","select_rows","set_to","size","solve","solve_l_triangular","solve_u_triangular","split_at","split_at_mut","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_slice","sub_slice_mut","sum","sum","sum","sum_cols","sum_rows","svd","swap_cols","swap_rows","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transpose","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upper_hess_decomp","upper_hessenberg","variance","variance","vcat","vcat","zeros","zeros","Fit","FitStatus","NotFit","O","Preprocessor","PreprocessorFitter","borrow","borrow_mut","clone","clone_into","default","encoders","eq","fit","fit_status","fmt","from","into","scalers","to_owned","transform","try_from","try_into","type_id","labelencoder","onehotencoder","LabelEncoder","LabelEncoderFitter","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fit","fit_status","fitter","fmt","fmt","from","from","into","into","label_map","to_owned","to_owned","transform","try_from","try_from","try_into","try_into","type_id","type_id","OneHotEncoder","OneHotEncoderFitter","borrow","borrow","borrow_mut","borrow_mut","category_map","clone","clone","clone_into","clone_into","default","fit","fit_status","fitter","fmt","fmt","from","from","into","into","to_owned","to_owned","transform","try_from","try_from","try_into","try_into","type_id","type_id","minmaxscaler","MinMaxFitter","MinMaxScaler","borrow","borrow","borrow_mut","borrow_mut","default","fmt","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"rust_ml"],[4,"rust_ml::base"],[8,"rust_ml::base::error"],[35,"rust_ml::dataset"],[88,"rust_ml::dataset::iris"],[89,"rust_ml::dataset::pokemon"],[90,"rust_ml::linalg"],[638,"rust_ml::preprocessing"],[662,"rust_ml::preprocessing::encoders"],[664,"rust_ml::preprocessing::encoders::labelencoder"],[694,"rust_ml::preprocessing::encoders::onehotencoder"],[724,"rust_ml::preprocessing::scalers"],[725,"rust_ml::preprocessing::scalers::minmaxscaler"],[744,"core::fmt"],[745,"core::fmt"],[746,"alloc::boxed"],[747,"core::convert"],[748,"alloc::string"],[749,"core::result"],[750,"core::any"],[751,"core::clone"],[752,"core::fmt"],[753,"std::path"],[754,"core::convert"],[755,"core::str::traits"],[756,"core::marker"],[757,"core::ops::arith"],[758,"core::ops::function"],[759,"core::cmp"],[760,"rulinalg::error"],[761,"core::any"],[762,"core::ops::bit"],[763,"rulinalg::matrix"],[764,"core::ops::arith"],[765,"core::cmp"],[766,"core::hash"],[767,"core::hash"],[768,"rulinalg::matrix"],[769,"rulinalg::norm"],[770,"rulinalg::norm"],[771,"core::ops::arith"]],"d":["Module for base items used throughout the crate.","Module for the basic dataset structure.","Re-exports of commonnly used rulinalg linear algebra tools …","Module for some data preprocessing functionality.","Contains the error value","Type alias for the use of the Result type in this crate.","Contains the success value","Module to define errors used in this crate.","Struct for an error.","Enum for our defined error kinds.","Error with the input data.","Parameters passed or used are invalid. ","Model is in an invalid state.","Linear algebra module error.","Trying to perform an invalid action on an unfitted model.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Method to get the error kind variant.","Constructor.","","","","","","","","Categorical data values are Strings.","Struct for a datatset.","Can represent a numeric or categorical data value.","Struct for a mixed value dataset. This struct can support …","Numeric data values are f64s.","","","","","","","","","","","","","Returns a reference to the features value.","Returns a reference to the 2D feature vector.","Returns a reference to the data_columns vector.","Returns a reference to the data_columns vector.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a Dataset struct from a CSV file. All features …","Creates a MixedDataset struct from a CSV file. Unlike the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Module for UCI Iris dataset.","Constructor.","Constructor.","Module for Pokemon stats dataset.","Returns a reference to the targets value.","Returns a reference to the target vector.","Returns a reference to the target_column name.","Returns a reference to the target_column name.","","","","","","","","","","","","","Loads the default Iris dataset.","Loads the default Pokemon dataset.","Matrix dimensions","Trait for immutable matrix structs.","Trait for mutable matrices.","The column axis.","Column of a matrix.","The <code>Matrix</code> struct.","A <code>MatrixSlice</code>","A mutable <code>MatrixSliceMut</code>","The row axis.","The Vector struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies a function to each element in the matrix.","Applies a function to each element in the vector.","Find the argmax of the Vector.","Find the argmin of the Vector.","Top left index of the slice.","Top left index of the slice.","Top left index of the slice.","Returns a <code>MatrixSliceMut</code> over the whole matrix.","Top left index of the matrix.","","","","","Returns a <code>MatrixSlice</code> over the whole matrix.","Converts matrix to bidiagonal form","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cholesky decomposition","","","","","Clones the Vector.","","","","","","Returns the column of a matrix at the given index. <code>None</code> if …","Iterate over the columns of the matrix.","Iterate over the mutable columns of the matrix.","Returns a mutable reference to the column of a matrix at …","Returns the column of a matrix at the given index without …","Returns a mutable reference to the column of a matrix at …","Columns in the matrix.","","","","","Returns a non-mutable reference to the underlying data.","Returns a non-mutable reference to the underlying data.","","Computes the determinant of the matrix.","Extract the diagonal of the matrix","Iterate over diagonal entries","Iterate over diagonal entries mutably","","","","","","","","","","","","","","","","","","","","","","","Compute dot product with specified Vector.","Eigendecomposition of a square matrix.","Eigenvalues of a square matrix.","The elementwise division of two matrices.","","The elementwise division of two vectors.","The elementwise product of two matrices.","","The elementwise product of two vectors.","","","","","Formats the Matrix for display.","","","","","Displays the Vector.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Constructs matrix with given diagonal.","Constructor for Matrix struct that takes a function <code>f</code> and …","Constructor for Vector struct that takes a function <code>f</code> and …","","","","","Produce a <code>MatrixSlice</code> from a <code>Matrix</code>","Produce a <code>MatrixSliceMut</code> from a mutable <code>Matrix</code>","Creates a <code>MatrixSlice</code> from raw parts.","Creates a <code>MatrixSliceMut</code> from raw parts.","Get a reference to a point in the matrix without bounds …","Returns a pointer to the element at the given index, …","Get a mutable reference to a point in the matrix without …","Returns an unsafe mutable pointer to the element at the …","","","Horizontally concatenates two matrices. With self on the …","Constructs the identity matrix.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","Convert the matrix struct into a owned Matrix.","","Consumes the Matrix and returns the Vec of data.","Consumes the Vector and returns the Vec of data.","Computes the inverse of the matrix.","Checks if matrix is diagonal.","Returns true if the matrix contais no elements","","Returns an iterator over the matrix data.","Returns an iterator over the Vector’s data.","Returns a mutable iterator over the matrix.","Returns an iterator over mutable references to the Vector…","Computes L, U, and P for LUP decomposition.","The max of the specified axis of the matrix.","The mean of the matrix along the specified axis.","The mean of the vector.","Compute the metric distance between two matrices.","Compute metric distance between two vectors.","The min of the specified axis of the matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable slice of the underlying data.","Returns a mutable slice of the underlying data.","","","","","","","","","Constructor for Matrix struct.","Constructor for Vector struct.","Compute given matrix norm for matrix.","Compute vector norm for vector.","","","Constructs matrix of all ones.","Constructs Vector of all ones.","Compute the QR decomposition of the matrix.","","","","","","","","","","","","","Returns the row of a matrix at the given index.","Iterate over the rows of the matrix.","Iterate over the mutable rows of the matrix.","Returns a mutable reference to the row of a matrix at the …","Row stride in the matrix.","","","","","Returns the row of a matrix at the given index without …","Returns a mutable reference to the row of a matrix at the …","Rows in the matrix.","","","","","Select block matrix from matrix","Select elements from the Vector and form a new Vector from …","Select columns from matrix","Select rows from matrix","Sets the underlying matrix data to the target data.","Returns the size of the Vector.","Solves the equation <code>Ax = y</code>.","Solves a lower triangular linear system.","Solves an upper triangular linear system.","Split the matrix at the specified axis returning two …","Split the matrix at the specified axis returning two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Produce a <code>MatrixSlice</code> from an existing matrix.","Produce a <code>MatrixSliceMut</code> from an existing matrix.","The sum of all elements in the matrix","","The sum of the vector.","The sum of the columns of the matrix.","The sum of the rows of the matrix.","Singular Value Decomposition","Swaps two columns in a matrix.","Swaps two rows in a matrix.","","","","","","","","Tranposes the given matrix","","","","","","","","","Attempts to convert the matrix into a new matrix of …","","","","","","","","","","","Returns (U,H), where H is the upper hessenberg form and U …","Returns H, where H is the upper hessenberg form.","The variance of the matrix along the specified axis.","The variance of the vector.","Vertically concatenates two matrices. With self on top.","","Constructs matrix of all zeros.","Constructs Vector of all zeros.","The fitter has been fit.","Enum for the fit status.","The fitter has not been fit.","Associated type for the output type.","Trait for a preprocessor.","Trait for the preprocessor fitters.","","","","","Sets the FitStatus enum to the default value of NotFit.","Encoder module","","Fit the preprocessor to the dataset.","Get the fit status for the preprocessor fitter.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Scaler Module","","Function to scale the data. ","","","","Module for the label encoder.","Module for the one hot encoder.","Struct for the Label Encoder.","Struct for the Label Encoder fitter.","","","","","","","","","Creates an inital, default Label Encoder fitter.","Fits the label encoder fitter on the given vector.","Get the fit status for the preprocessor fitter.","Returns a reference to the fitter struct.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a reference to the label map value.","","","Transforms the Vector based on the fitted Label Encoder …","","","","","","","Struct for the One Hot Encoder.","Struct for the one hot encoder fitter.","","","","","Returns a reference to the category map.","","","","","Creates an initial, default One Hot Encoder fitter.","Fits the one hot encoder on a given dataset column.","Get the fit status for the preprocessor fitter.","Returns a reference to the fitter struct.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","One hot encodes the categorical columns and returns a …","","","","","","","MinMax Scaler","Struct for the fitter for the MinMax Scaler.","Struct for a MinMax scaler.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,22,0,22,0,0,0,1,1,1,1,1,1,4,1,4,1,4,4,1,4,1,4,4,4,4,1,4,1,4,1,4,14,0,0,0,14,11,14,15,11,14,15,11,14,15,11,14,15,11,15,11,15,14,11,14,15,11,14,15,11,15,11,14,15,0,11,15,0,11,15,11,15,11,14,15,11,14,15,11,14,15,11,14,15,0,0,0,0,0,45,0,0,0,0,45,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,18,18,18,18,18,18,18,18,21,21,21,21,21,21,21,21,33,33,33,33,33,33,33,33,18,18,18,18,34,18,18,18,34,21,33,34,38,21,32,33,39,38,21,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,45,21,32,33,39,18,45,21,32,33,39,18,21,45,21,32,39,18,45,21,32,39,18,38,38,34,34,38,34,38,21,32,33,39,21,18,39,21,38,38,34,21,21,21,21,32,32,32,32,33,33,33,33,18,18,18,18,21,21,33,33,18,18,18,21,21,38,21,18,38,21,18,21,18,45,21,21,32,33,39,18,18,45,21,21,21,21,32,33,39,18,18,18,18,18,18,18,21,21,18,21,21,21,18,32,33,32,33,38,18,34,18,21,18,38,21,21,32,33,39,18,21,33,18,45,21,32,33,39,18,18,32,32,32,33,33,33,18,18,38,21,21,18,21,38,38,21,38,18,34,18,21,38,21,18,38,18,38,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,18,18,18,18,21,21,33,33,18,18,21,18,21,21,32,32,33,33,18,18,21,18,38,18,18,18,21,18,21,18,18,18,18,18,18,18,18,18,18,18,18,38,38,34,34,38,21,32,33,39,38,34,38,21,32,33,39,38,18,38,38,34,18,21,38,38,38,34,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,18,18,18,18,18,18,18,18,21,21,21,21,21,21,21,21,33,33,33,33,33,33,33,33,18,18,18,18,38,34,38,21,18,38,38,21,34,34,45,21,32,39,18,21,18,38,45,21,32,33,39,18,45,21,21,32,33,39,18,45,21,32,33,39,18,21,21,21,18,38,21,21,18,86,0,86,88,0,0,86,86,86,86,86,0,86,87,87,86,86,86,0,86,88,86,86,86,0,0,0,0,90,91,90,91,90,91,90,91,91,91,91,90,90,91,90,91,90,91,91,90,91,90,90,91,90,91,90,91,0,0,95,94,95,94,94,95,94,95,94,94,94,94,95,95,94,95,94,95,94,95,94,95,95,94,95,94,95,94,0,0,0,97,96,97,96,96,97,96,97,96,97,96,97,96,97,96,97,96],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],3],[[4,2],3],[[4,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,1],[[1,-1],4,[[7,[[6,[5]]]]]],[-1,8,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1,-2]]],[[11,[-1,-2]]],[12,13,12],[12,13,12]],[14,14],[[[15,[-1]]],[[15,[-1]]],[12,13,12]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[[11,[-1,-2]]],-1,[12,13],[12,13]],[[[15,[-1]]],[[17,[[17,[14]]]]],[12,13]],[[[11,[-1,-2]]],[[18,[8]]],[12,13],[12,13]],[[[15,[-1]]],[[18,[8]]],[12,13]],[[14,14],19],[[[11,[-1,-2]],2],3,[12,13,13],[12,13,13]],[[14,2],3],[[[15,[-1]],2],3,[12,13,13]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,20],[[22,[[11,[[21,[-2]],[18,[-3]]]]]]],[[24,[23]]],[25,13,26],[13,12,26]],[[-1,20,[27,[20]]],[[22,[[15,[[18,[-2]]]]]]],[[24,[23]]],[13,12,26]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-2,[18,[8]],8],[[11,[-1,-2]]],[12,13],[12,13]],[[[17,[[17,[14]]]],-1,[18,[8]],8],[[15,[-1]]],[12,13]],0,[[[11,[-1,-2]]],-2,[12,13],[12,13]],[[[15,[-1]]],-1,[12,13]],[[[11,[-1,-2]]],20,[12,13],[12,13]],[[[15,[-1]]],20,[12,13]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[],[[11,[[21,[28]],[18,[8]]]]]],[[],[[15,[[18,[8]]]]]],0,0,0,0,0,0,0,0,0,0,[[[21,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[31,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[31,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[31,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[31,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[31,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[31,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[31,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[31,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[21,[-1]],-1],16,[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[21,[-1]],-1],16,[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[33,[-1]],-1],16,[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[33,[-1]],-1],16,[29,[31,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[31,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[31,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[31,[],[[30,[]]]]]],[[34,35],34],[[[18,[-1]],35],[[18,[-1]]],29],[[[18,[-1]]],[[16,[36,-1]]],[29,37]],[[[18,[-1]]],[[16,[36,-1]]],[29,37]],[34],[[[21,[-1]]],[],[]],[[[33,[-1]]],[],[]],[34,[[33,[-1]]],[]],[38],[[[21,[-1]]],[],[]],[[[32,[-1]]],[],[]],[[[33,[-1]]],[],[]],[[[39,[-1]]],[],[]],[38,[[32,[-1]]],[]],[[[21,[-1]]],[[9,[[16,[[21,[-1]],[21,[-1]],[21,[-1]]]],40]]],[41,25]],[[[18,[-1]],-1],[[18,[-1]]],[29,[42,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[42,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[42,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[42,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[42,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[42,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[42,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[42,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[42,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[42,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[42,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[42,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[43,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[43,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[43,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[43,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[43,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[43,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[43,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[43,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[43,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[43,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[43,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[43,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[44,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[44,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[44,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[44,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[44,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[44,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[44,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[44,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[44,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[44,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[44,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[44,[],[[30,[]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]]],[[9,[[21,[-1]],40]]],[41,25]],[45,45],[[[21,[-1]]],[[21,[-1]]],12],[[[32,[-1]]],[[32,[-1]]],12],[[[39,[-1]]],[[39,[-1]]],12],[[[18,[-1]]],[[18,[-1]]],12],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[38,36],[[39,[-1]]],[]],[38,[[46,[-1]]],[]],[34,[[47,[-1]]],[]],[[34,36],[[48,[-1]]],[]],[[38,36],[[39,[-1]]],[]],[[34,36],[[48,[-1]]],[]],[38,36],[[[21,[-1]]],36,[]],[[[32,[-1]]],36,[]],[[[33,[-1]]],36,[]],[[[39,[-1]]],36,[]],[[[21,[-1]]],[[17,[-1]]],[]],[[[18,[-1]]],[[17,[-1]]],[]],[[[39,[-1]]],[[32,[-1]]],[]],[[[21,[-1]]],-1,[41,25]],[38,[[49,[-1,38]]],[]],[[38,50],[[49,[-1,38]]],[]],[[34,50],[[51,[-1,34]]],[]],[[[21,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[52,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[52,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[52,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[52,[],[[30,[]]]]]],[[[21,[-1]],-1],16,[29,[52,[],[[30,[]]]]]],[[[21,[-1]],-1],16,[29,[52,[],[[30,[]]]]]],[[[33,[-1]],-1],16,[29,[52,[],[[30,[]]]]]],[[[33,[-1]],-1],16,[29,[52,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[52,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[52,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],-1,[[53,[],[[30,[]]]],[54,[],[[30,[]]]],31,29]],[[[21,[-1]]],[[9,[[16,[[17,[-1]],[21,[-1]]]],40]]],[41,25,55]],[[[21,[-1]]],[[9,[[17,[-1]],40]]],[41,25,55]],[[38,38],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[52,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[52,[],[[30,[]]]]]],[[38,38],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[54,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],19,56],[[[18,[-1]],[18,[-1]]],19,56],[[45,2],[[9,[16,57]]]],[[[21,[-1]],2],[[9,[16,57]]],13],[[[21,[-1]],2],[[9,[16,57]]],58],[[[32,[-1]],2],[[9,[16,57]]],13],[[[33,[-1]],2],[[9,[16,57]]],13],[[[39,[-1]],2],[[9,[16,57]]],13],[[[18,[-1]],2],[[9,[16,57]]],13],[[[18,[-1]],2],[[9,[16,57]]],58],[-1,-1,[]],[-1,-1,[]],[[[32,[-1]]],[[21,[-1]]],29],[[[18,[-1]]],[[21,[-1]]],[]],[[[33,[-1]]],[[21,[-1]]],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[59,[-1]]],[[18,[-1]]],12],[[[48,[-1]]],[[18,[-1]]],12],[[[17,[-1]]],[[18,[-1]]],[]],[[[60,[-1]]],[[18,[-1]]],12],[[[27,[-1]]],[[18,[-1]]],12],[[[39,[-1]]],[[18,[-1]]],12],[[[27,[-1]]],[[21,[-1]]],[12,53]],[[36,36,-2],[[21,[-1]]],[],[[61,[36,36],[[30,[-1]]]]]],[[36,-2],[[18,[-1]]],[],[[61,[36],[[30,[-1]]]]]],[-2,[[21,[-1]]],29,[[63,[],[[62,[[60,[-1]]]]]]]],[-2,[[21,[-1]]],29,[[63,[],[[62,[[59,[-1]]]]]]]],[-2,[[21,[-1]]],29,[[63,[],[[62,[[27,[-1]]]]]]]],[-2,[[18,[-1]]],[],[[63,[],[[62,[-1]]]]]],[[[21,[-1]],[64,[36]],36,36],[[32,[-1]]],[]],[[[21,[-1]],[64,[36]],36,36],[[33,[-1]]],[]],[[36,36,36],[[32,[-1]]],[]],[[36,36,36],[[33,[-1]]],[]],[[38,[64,[36]]],-1,[]],[[[18,[-1]],36],-1,[]],[[34,[64,[36]]],-1,[]],[[[18,[-1]],36],-1,[]],[[[21,[-1]],-2],16,65,66],[[[18,[-1]],-2],16,65,66],[[38,-2],[[21,[-1]]],29,[[38,[-1]]]],[36,[[21,[-1]]],[12,53,67]],[[[21,[-1]],[64,[36]]],-1,[]],[[[32,[-1]],[64,[36]]],-1,[]],[[[33,[-1]],[64,[36]]],-1,[]],[[[39,[-1]],36],-1,[]],[[[18,[-1]],36],-1,[]],[[[21,[-1]],[64,[36]]],-1,[]],[[[33,[-1]],[64,[36]]],-1,[]],[[[18,[-1]],36],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[-1]]],[[17,[-1]]],[]],[-1,-2,[],[]],[[[32,[-1]]],[],[]],[[[32,[-1]]],[],[]],[[[32,[-1]]],[],[]],[[[33,[-1]]],[],[]],[[[33,[-1]]],[],[]],[[[33,[-1]]],[],[]],[[[18,[-1]]],[],[]],[[[18,[-1]]],[],[]],[38,[[21,[-1]]],29],[[[21,[-1]]],[[21,[-1]]],29],[[[21,[-1]]],[[17,[-1]]],[]],[[[18,[-1]]],[[17,[-1]]],[]],[[[21,[-1]]],[[9,[[21,[-1]],40]]],[41,25]],[38,19],[38,19],[[[21,[-1]]],19,[]],[38,[[68,[-1]]],[]],[[[18,[-1]]],[[69,[-1]]],[]],[34,[[70,[-1]]],[]],[[[18,[-1]]],[[71,[-1]]],[]],[[[21,[-1]]],[[9,[[16,[[21,[-1]],[21,[-1]],[21,[-1]]]],40]]],[41,25]],[[38,45],[[18,[-1]]],[29,37]],[[[21,[-1]],45],[[18,[-1]]],[25,72]],[[[18,[-1]]],-1,[25,72]],[[38,-2,-3],-1,[],[[38,[-1]]],[[73,[-1,38,-2]]]],[[[18,[-1]],[18,[-1]],-2],-1,25,[[74,[-1]]]],[[38,45],[[18,[-1]]],[29,37]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[18,[-1]]],[[18,[-1]]],[[53,[],[[30,[]]]],[54,[],[[30,[]]]],31,29]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[75,[-1]]],[[21,[-1]]],[]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[18,[-1]]],[[18,[-1]]],[[53,[],[[30,[]]]],[54,[],[[30,[]]]],31,29]],[[[21,[-1]],[75,[-1]]],[[21,[-1]]],12],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],[18,[-1]]],[[18,[-1]]],[[53,[],[[30,[]]]],[54,[],[[30,[]]]],31,29]],[[[21,[-1]],[18,[-1]]],[[18,[-1]]],[[53,[],[[30,[]]]],[54,[],[[30,[]]]],31,29]],[[[21,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[21,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[21,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[21,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[32,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[32,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[32,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[33,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[33,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[33,[-1]],-1],[[21,[-1]]],[29,[54,[],[[30,[]]]]]],[[[33,[-1]],[75,[-1]]],[[21,[-1]]],[53,12]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[53,[],[[30,[]]]],31,[54,[],[[30,[]]]],41]],[[[18,[-1]],-1],[[18,[-1]]],[29,[54,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[54,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[54,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[54,[],[[30,[]]]]]],[[[21,[-1]],-1],16,[29,[54,[],[[30,[]]]]]],[[[21,[-1]],-1],16,[29,[54,[],[[30,[]]]]]],[[[33,[-1]],-1],16,[29,[54,[],[[30,[]]]]]],[[[33,[-1]],-1],16,[29,[54,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[54,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[54,[],[[30,[]]]]]],[[[21,[-1]]],[[27,[-1]]],[]],[[[18,[-1]]],[[27,[-1]]],[]],[[[21,[-1]]],[[21,[-1]]],[[76,[],[[30,[]]]],29]],[[[21,[-1]]],[[21,[-1]]],[[76,[],[[30,[]]]],29]],[[[32,[-1]]],[[21,[-1]]],[[76,[],[[30,[]]]],29]],[[[32,[-1]]],[[21,[-1]]],[[76,[],[[30,[]]]],29]],[[[33,[-1]]],[[21,[-1]]],[[76,[],[[30,[]]]],29]],[[[33,[-1]]],[[21,[-1]]],[[76,[],[[30,[]]]],29]],[[[18,[-1]]],[[18,[-1]]],[[76,[],[[30,[]]]],29]],[[[18,[-1]]],[[18,[-1]]],[[76,[],[[30,[]]]],29]],[[36,36,-2],[[21,[-1]]],[],[[7,[[17,[-1]]]]]],[-2,[[18,[-1]]],[],[[7,[[17,[-1]]]]]],[[38,-2],-1,25,[[77,[-1,38]]]],[[[18,[-1]],-2],-1,25,[[78,[-1]]]],[[[18,[-1]]],[[18,[-1]]],[[79,[],[[30,[]]]],29]],[[[18,[-1]]],[[18,[-1]]],[[79,[],[[30,[]]]],29]],[[36,36],[[21,[-1]]],[12,67]],[36,[[18,[-1]]],[12,67]],[[[21,[-1]]],[[9,[[16,[[21,[-1]],[21,[-1]]]],40]]],[41,25]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[80,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[80,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[80,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[80,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[80,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[80,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[80,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[80,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[80,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[80,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[80,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[80,[],[[30,[]]]]]],[[38,36],[[60,[-1]]],[]],[38,[[81,[-1]]],[]],[34,[[82,[-1]]],[]],[[34,36],[[59,[-1]]],[]],[38,36],[[[21,[-1]]],36,[]],[[[32,[-1]]],36,[]],[[[33,[-1]]],36,[]],[[[39,[-1]]],36,[]],[[38,36],[[60,[-1]]],[]],[[34,36],[[59,[-1]]],[]],[38,36],[[[21,[-1]]],36,[]],[[[32,[-1]]],36,[]],[[[33,[-1]]],36,[]],[[[39,[-1]]],36,[]],[[38,[27,[36]],[27,[36]]],[[21,[-1]]],29],[[[18,[-1]],[27,[36]]],[[18,[-1]]],[29,37]],[[38,-1],[[21,[-2]]],[[63,[],[[62,[36]]]]],29],[[38,-1],[[21,[-2]]],[[63,[],[[62,[36]]]]],29],[[34,-2],16,29,[[38,[-1]]]],[[[18,[-1]]],36,[]],[[[21,[-1]],[18,[-1]]],[[9,[[18,[-1]],40]]],[41,25]],[[38,[18,[-1]]],[[9,[[18,[-1]],40]]],[41,25]],[[38,[18,[-1]]],[[9,[[18,[-1]],40]]],[41,25]],[[38,36,45],[[16,[[32,[-1]],[32,[-1]]]]],[]],[[34,36,45],[[16,[[33,[-1]],[33,[-1]]]]],[]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[32,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],-1],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],[[21,[-1]]],[29,[83,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[83,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[83,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[83,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[83,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[83,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[83,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],[[18,[-1]]],[29,[83,[],[[30,[]]]]]],[[[18,[-1]],-1],[[18,[-1]]],[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[32,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[21,[-1]],-1],16,[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[33,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[21,[-1]],-1],16,[29,[83,[],[[30,[]]]]]],[[[21,[-1]],[21,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[33,[-1]],-1],16,[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[33,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[32,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[33,[-1]],[21,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[33,[-1]],-1],16,[29,[83,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[83,[],[[30,[]]]]]],[[[18,[-1]],[18,[-1]]],16,[29,[83,[],[[30,[]]]]]],[[[18,[-1]],-1],16,[29,[83,[],[[30,[]]]]]],[[38,[64,[36]],36,36],[[32,[-1]]],[]],[[34,[64,[36]],36,36],[[33,[-1]]],[]],[38,-1,[]],[[[21,[-1]]],-1,[29,[53,[],[[30,[]]]],31]],[[[18,[-1]]],-1,[29,[53,[],[[30,[]]]],31]],[38,[[18,[-1]]],[29,[53,[],[[30,[]]]],31]],[38,[[18,[-1]]],[29,[53,[],[[30,[]]]],31]],[[[21,[-1]]],[[9,[[16,[[21,[-1]],[21,[-1]],[21,[-1]]]],40]]],[41,25,55]],[[34,36,36],16],[[34,36,36],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,8,[]],[38,[[21,[-1]]],29],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[21,[-1]]],[[9,[[21,[-2]],40]]],84,85],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[[21,[-1]]],[[9,[[16,[[21,[-1]],[21,[-1]]]],40]]],[41,25]],[[[21,[-1]]],[[9,[[21,[-1]],40]]],[41,25]],[[[21,[-1]],45],[[9,[[18,[-1]],40]]],[25,72]],[[[18,[-1]]],-1,[25,72]],[[38,-2],[[21,[-1]]],29,[[38,[-1]]]],[[[21,[-1]],-2],[[21,[-1]]],29,[[38,[-1]]]],[[36,36],[[21,[-1]]],[12,53]],[36,[[18,[-1]]],[12,53]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[86,86],[[-1,-2],16,[],[]],[[],86],0,[[86,86],19],[[87,-1],[[22,[-2]]],[],[[88,[-1]]]],[87,86],[[86,2],3],[-1,-1,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[[[88,[],[[89,[-1]]]],-2],[[22,[-1]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[90,[-1,-2]]],[[90,[-1,-2]]],[12,13,12],[25,12,13,12]],[[[91,[-1,-2]]],[[91,[-1,-2]]],[12,13,12],[25,12,13,12]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[],[[91,[-1,-2]]],[12,13],[25,12,13]],[[[91,[-1,-2]],[18,[-1]]],[[22,[[90,[-1,-2]]]]],[12,13,92,65],[25,12,13]],[[[91,[-1,-2]]],86,[12,13,92,65],[25,12,13]],[[[90,[-1,-2]]],[[91,[-1,-2]]],[12,13,92,65],[25,12,13]],[[[90,[-1,-2]],2],3,[12,13,13],[25,12,13,13]],[[[91,[-1,-2]],2],3,[12,13,13],[25,12,13,13]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[91,[-1,-2]]],[[93,[-1,-2]]],[12,13],[25,12,13]],[-1,-2,[],[]],[-1,-2,[],[]],[[[90,[-1,-2]],[18,[-1]]],[[22,[[18,[-2]]]]],[12,13,92,65],[25,12,13]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[94,[-1]]],[[93,[8,[93,[8,36]]]]],[12,13]],[[[95,[-1]]],[[95,[-1]]],12],[[[94,[-1]]],[[94,[-1]]],12],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[],[[94,[-1]]],[]],[[[94,[-1]],[15,[[18,[-1]]]]],[[22,[[95,[-1]]]]],[12,13]],[[[94,[-1]]],86,[12,13]],[[[95,[-1]]],[[94,[-1]]],[]],[[[95,[-1]],2],3,13],[[[94,[-1]],2],3,13],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[95,[-1]],[15,[[18,[-1]]]]],[[22,[-2]]],[12,13],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[96,[-1]]],25],[[[97,[-1]],2],3,[13,25]],[[[96,[-1]],2],3,[13,25]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]]],"c":[378],"p":[[6,"ErrorKind",8],[5,"Formatter",744],[8,"Result",744],[5,"Error",8],[10,"Error",745],[5,"Box",746],[10,"Into",747],[5,"String",748],[6,"Result",749],[5,"TypeId",750],[5,"Dataset",35],[10,"Clone",751],[10,"Debug",744],[6,"MixedDataValue",35],[5,"MixedDataset",35],[1,"tuple"],[5,"Vec",752],[5,"Vector",90],[1,"bool"],[1,"str"],[5,"Matrix",90],[8,"MLResult",4],[5,"Path",753],[10,"AsRef",747],[10,"Float",754],[10,"FromStr",755],[1,"slice"],[1,"f64"],[10,"Copy",756],[17,"Output"],[10,"Add",757],[5,"MatrixSlice",90],[5,"MatrixSliceMut",90],[10,"BaseMatrixMut",90],[10,"Fn",758],[1,"usize"],[10,"PartialOrd",759],[10,"BaseMatrix",90],[5,"Column",90],[5,"Error",760],[10,"Any",750],[10,"BitAnd",761],[10,"BitOr",761],[10,"BitXor",761],[6,"Axes",90],[5,"Cols",762],[5,"ColsMut",762],[5,"ColumnMut",762],[5,"Diagonal",762],[6,"DiagOffset",762],[5,"DiagonalMut",762],[10,"Div",757],[10,"Zero",763],[10,"Mul",757],[10,"Signed",764],[10,"PartialEq",759],[5,"Error",744],[10,"Display",744],[5,"RowMut",762],[5,"Row",762],[10,"FnMut",758],[17,"Item"],[10,"IntoIterator",765],[1,"array"],[10,"Hash",766],[10,"Hasher",766],[10,"One",763],[5,"SliceIter",762],[5,"Iter",767],[5,"SliceIterMut",762],[5,"IterMut",767],[10,"FromPrimitive",768],[10,"MatrixMetric",769],[10,"VectorMetric",769],[5,"PermutationMatrix",770],[10,"Neg",757],[10,"MatrixNorm",769],[10,"VectorNorm",769],[10,"Not",761],[10,"Rem",757],[5,"Rows",762],[5,"RowsMut",762],[10,"Sub",757],[10,"ToPrimitive",768],[10,"NumCast",768],[6,"FitStatus",638],[10,"PreprocessorFitter",638],[10,"Preprocessor",638],[17,"O"],[5,"LabelEncoder",664],[5,"LabelEncoderFitter",664],[10,"Eq",759],[5,"HashMap",771],[5,"OneHotEncoderFitter",694],[5,"OneHotEncoder",694],[5,"MinMaxFitter",725],[5,"MinMaxScaler",725]],"b":[[20,"impl-Debug-for-Error"],[21,"impl-Display-for-Error"],[100,"impl-Add%3C%26T%3E-for-Matrix%3CT%3E"],[101,"impl-Add%3CMatrix%3CT%3E%3E-for-%26Matrix%3CT%3E"],[102,"impl-Add%3CMatrixSlice%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[103,"impl-Add%3C%26MatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[104,"impl-Add%3CMatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[105,"impl-Add%3C%26MatrixSlice%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[106,"impl-Add%3CT%3E-for-Matrix%3CT%3E"],[107,"impl-Add%3C%26Matrix%3CT%3E%3E-for-%26Matrix%3CT%3E"],[108,"impl-Add%3C%26T%3E-for-%26Matrix%3CT%3E"],[109,"impl-Add%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[110,"impl-Add%3C%26Matrix%3CT%3E%3E-for-Matrix%3CT%3E"],[111,"impl-Add-for-Matrix%3CT%3E"],[112,"impl-Add%3C%26MatrixSliceMut%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[113,"impl-Add%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[114,"impl-Add%3CT%3E-for-%26Matrix%3CT%3E"],[115,"impl-Add%3C%26MatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[116,"impl-Add%3CT%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[117,"impl-Add%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[118,"impl-Add%3C%26Matrix%3CT%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[119,"impl-Add%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[120,"impl-Add%3CMatrixSlice%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[121,"impl-Add%3C%26T%3E-for-MatrixSlice%3C\'a,+T%3E"],[122,"impl-Add%3CMatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[123,"impl-Add%3C%26T%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[124,"impl-Add%3CMatrix%3CT%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[125,"impl-Add%3CT%3E-for-MatrixSlice%3C\'a,+T%3E"],[126,"impl-Add%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[127,"impl-Add%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[128,"impl-Add%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[129,"impl-Add%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[130,"impl-Add%3C%26Matrix%3CT%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[131,"impl-Add%3CMatrix%3CT%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[132,"impl-Add%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[133,"impl-Add%3CMatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[134,"impl-Add%3C%26T%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[135,"impl-Add%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[136,"impl-Add%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[137,"impl-Add%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[138,"impl-Add%3C%26Matrix%3CT%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[139,"impl-Add%3C%26T%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[140,"impl-Add%3CMatrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[141,"impl-Add%3CT%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[142,"impl-Add%3CT%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[143,"impl-Add%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[144,"impl-Add%3CMatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[145,"impl-Add%3C%26Matrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[146,"impl-Add%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[147,"impl-Add%3CMatrix%3CT%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[148,"impl-Add%3CVector%3CT%3E%3E-for-%26Vector%3CT%3E"],[149,"impl-Add%3C%26T%3E-for-%26Vector%3CT%3E"],[150,"impl-Add%3CT%3E-for-Vector%3CT%3E"],[151,"impl-Add%3C%26T%3E-for-Vector%3CT%3E"],[152,"impl-Add%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[153,"impl-Add%3CT%3E-for-%26Vector%3CT%3E"],[154,"impl-Add-for-Vector%3CT%3E"],[155,"impl-Add%3C%26Vector%3CT%3E%3E-for-%26Vector%3CT%3E"],[156,"impl-AddAssign%3C%26MatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[157,"impl-AddAssign%3CMatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[158,"impl-AddAssign-for-Matrix%3CT%3E"],[159,"impl-AddAssign%3C%26T%3E-for-Matrix%3CT%3E"],[160,"impl-AddAssign%3C%26MatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[161,"impl-AddAssign%3C%26Matrix%3CT%3E%3E-for-Matrix%3CT%3E"],[162,"impl-AddAssign%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[163,"impl-AddAssign%3CT%3E-for-Matrix%3CT%3E"],[164,"impl-AddAssign%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[165,"impl-AddAssign%3C%26Matrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[166,"impl-AddAssign%3CMatrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[167,"impl-AddAssign%3CMatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[168,"impl-AddAssign%3CT%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[169,"impl-AddAssign%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[170,"impl-AddAssign%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[171,"impl-AddAssign%3C%26T%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[172,"impl-AddAssign-for-Vector%3CT%3E"],[173,"impl-AddAssign%3CT%3E-for-Vector%3CT%3E"],[174,"impl-AddAssign%3C%26T%3E-for-Vector%3CT%3E"],[175,"impl-AddAssign%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[191,"impl-BitAnd%3C%26T%3E-for-%26Vector%3CT%3E"],[192,"impl-BitAnd-for-Vector%3CT%3E"],[193,"impl-BitAnd%3CT%3E-for-%26Vector%3CT%3E"],[194,"impl-BitAnd%3CVector%3CT%3E%3E-for-%26Vector%3CT%3E"],[195,"impl-BitAnd%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[196,"impl-BitAnd%3C%26T%3E-for-Vector%3CT%3E"],[197,"impl-BitAnd%3C%26Vector%3CT%3E%3E-for-%26Vector%3CT%3E"],[198,"impl-BitAnd%3CT%3E-for-Vector%3CT%3E"],[199,"impl-BitAndAssign%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[200,"impl-BitAndAssign%3C%26T%3E-for-Vector%3CT%3E"],[201,"impl-BitAndAssign-for-Vector%3CT%3E"],[202,"impl-BitAndAssign%3CT%3E-for-Vector%3CT%3E"],[203,"impl-BitOr%3CT%3E-for-Vector%3CT%3E"],[204,"impl-BitOr%3C%26T%3E-for-Vector%3CT%3E"],[205,"impl-BitOr%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[206,"impl-BitOr%3C%26T%3E-for-%26Vector%3CT%3E"],[207,"impl-BitOr%3C%26Vector%3CT%3E%3E-for-%26Vector%3CT%3E"],[208,"impl-BitOr%3CT%3E-for-%26Vector%3CT%3E"],[209,"impl-BitOr%3CVector%3CT%3E%3E-for-%26Vector%3CT%3E"],[210,"impl-BitOr-for-Vector%3CT%3E"],[211,"impl-BitOrAssign%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[212,"impl-BitOrAssign-for-Vector%3CT%3E"],[213,"impl-BitOrAssign%3C%26T%3E-for-Vector%3CT%3E"],[214,"impl-BitOrAssign%3CT%3E-for-Vector%3CT%3E"],[215,"impl-BitXor%3C%26T%3E-for-%26Vector%3CT%3E"],[216,"impl-BitXor-for-Vector%3CT%3E"],[217,"impl-BitXor%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[218,"impl-BitXor%3C%26Vector%3CT%3E%3E-for-%26Vector%3CT%3E"],[219,"impl-BitXor%3C%26T%3E-for-Vector%3CT%3E"],[220,"impl-BitXor%3CT%3E-for-%26Vector%3CT%3E"],[221,"impl-BitXor%3CT%3E-for-Vector%3CT%3E"],[222,"impl-BitXor%3CVector%3CT%3E%3E-for-%26Vector%3CT%3E"],[223,"impl-BitXorAssign-for-Vector%3CT%3E"],[224,"impl-BitXorAssign%3C%26T%3E-for-Vector%3CT%3E"],[225,"impl-BitXorAssign%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[226,"impl-BitXorAssign%3CT%3E-for-Vector%3CT%3E"],[268,"impl-Div%3CT%3E-for-%26Matrix%3CT%3E"],[269,"impl-Div%3C%26T%3E-for-Matrix%3CT%3E"],[270,"impl-Div%3CT%3E-for-Matrix%3CT%3E"],[271,"impl-Div%3C%26T%3E-for-%26Matrix%3CT%3E"],[272,"impl-Div%3CT%3E-for-MatrixSlice%3C\'a,+T%3E"],[273,"impl-Div%3C%26T%3E-for-MatrixSlice%3C\'a,+T%3E"],[274,"impl-Div%3C%26T%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[275,"impl-Div%3CT%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[276,"impl-Div%3CT%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[277,"impl-Div%3CT%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[278,"impl-Div%3C%26T%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[279,"impl-Div%3C%26T%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[280,"impl-Div%3C%26T%3E-for-Vector%3CT%3E"],[281,"impl-Div%3CT%3E-for-Vector%3CT%3E"],[282,"impl-Div%3C%26T%3E-for-%26Vector%3CT%3E"],[283,"impl-Div%3CT%3E-for-%26Vector%3CT%3E"],[284,"impl-DivAssign%3C%26T%3E-for-Matrix%3CT%3E"],[285,"impl-DivAssign%3CT%3E-for-Matrix%3CT%3E"],[286,"impl-DivAssign%3C%26T%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[287,"impl-DivAssign%3CT%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[288,"impl-DivAssign%3CT%3E-for-Vector%3CT%3E"],[289,"impl-DivAssign%3C%26T%3E-for-Vector%3CT%3E"],[302,"impl-Debug-for-Matrix%3CT%3E"],[303,"impl-Display-for-Matrix%3CT%3E"],[307,"impl-Debug-for-Vector%3CT%3E"],[308,"impl-Display-for-Vector%3CT%3E"],[311,"impl-From%3CMatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[312,"impl-From%3CVector%3CT%3E%3E-for-Matrix%3CT%3E"],[313,"impl-From%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[318,"impl-From%3CRowMut%3C\'a,+T%3E%3E-for-Vector%3CT%3E"],[319,"impl-From%3CColumnMut%3C\'a,+T%3E%3E-for-Vector%3CT%3E"],[320,"impl-From%3CVec%3CT%3E%3E-for-Vector%3CT%3E"],[321,"impl-From%3CRow%3C\'a,+T%3E%3E-for-Vector%3CT%3E"],[322,"impl-From%3C%26%5BT%5D%3E-for-Vector%3CT%3E"],[323,"impl-From%3CColumn%3C\'a,+T%3E%3E-for-Vector%3CT%3E"],[327,"impl-FromIterator%3CRow%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[328,"impl-FromIterator%3CRowMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[329,"impl-FromIterator%3C%26%5BT%5D%3E-for-Matrix%3CT%3E"],[358,"impl-IntoIterator-for-MatrixSlice%3C\'a,+T%3E"],[359,"impl-IntoIterator-for-%26MatrixSlice%3C\'a,+T%3E"],[360,"impl-IntoIterator-for-%26mut+MatrixSlice%3C\'a,+T%3E"],[361,"impl-IntoIterator-for-%26MatrixSliceMut%3C\'a,+T%3E"],[362,"impl-IntoIterator-for-%26mut+MatrixSliceMut%3C\'a,+T%3E"],[363,"impl-IntoIterator-for-MatrixSliceMut%3C\'a,+T%3E"],[364,"impl-IntoIterator-for-Vector%3CT%3E"],[365,"impl-IntoIterator-for-%26Vector%3CT%3E"],[385,"impl-Mul%3C%26Matrix%3CT%3E%3E-for-%26Matrix%3CT%3E"],[386,"impl-Mul%3C%26MatrixSliceMut%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[387,"impl-Mul%3C%26Vector%3CT%3E%3E-for-%26Matrix%3CT%3E"],[388,"impl-Mul%3C%26MatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[389,"impl-Mul%3CMatrixSlice%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[390,"impl-Mul%3C%26MatrixSlice%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[391,"impl-Mul%3CMatrix%3CT%3E%3E-for-%26Matrix%3CT%3E"],[392,"impl-Mul%3CPermutationMatrix%3CT%3E%3E-for-%26Matrix%3CT%3E"],[393,"impl-Mul%3C%26MatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[394,"impl-Mul%3CPermutationMatrix%3CT%3E%3E-for-Matrix%3CT%3E"],[395,"impl-Mul%3C%26Matrix%3CT%3E%3E-for-Matrix%3CT%3E"],[396,"impl-Mul%3CVector%3CT%3E%3E-for-%26Matrix%3CT%3E"],[397,"impl-Mul%3C%26PermutationMatrix%3CT%3E%3E-for-Matrix%3CT%3E"],[398,"impl-Mul%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[399,"impl-Mul%3CMatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[400,"impl-Mul%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[401,"impl-Mul%3CVector%3CT%3E%3E-for-Matrix%3CT%3E"],[402,"impl-Mul%3C%26Vector%3CT%3E%3E-for-Matrix%3CT%3E"],[403,"impl-Mul%3C%26T%3E-for-%26Matrix%3CT%3E"],[404,"impl-Mul%3C%26T%3E-for-Matrix%3CT%3E"],[405,"impl-Mul%3C%26PermutationMatrix%3CT%3E%3E-for-%26Matrix%3CT%3E"],[406,"impl-Mul%3CT%3E-for-Matrix%3CT%3E"],[407,"impl-Mul-for-Matrix%3CT%3E"],[408,"impl-Mul%3CT%3E-for-%26Matrix%3CT%3E"],[409,"impl-Mul%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[410,"impl-Mul%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[411,"impl-Mul%3CMatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[412,"impl-Mul%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[413,"impl-Mul%3CMatrix%3CT%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[414,"impl-Mul%3C%26T%3E-for-MatrixSlice%3C\'a,+T%3E"],[415,"impl-Mul%3CPermutationMatrix%3CT%3E%3E-for-%26MatrixSlice%3C\'m,+T%3E"],[416,"impl-Mul%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[417,"impl-Mul%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[418,"impl-Mul%3CT%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[419,"impl-Mul%3C%26PermutationMatrix%3CT%3E%3E-for-MatrixSlice%3C\'m,+T%3E"],[420,"impl-Mul%3C%26Matrix%3CT%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[421,"impl-Mul%3CMatrix%3CT%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[422,"impl-Mul%3C%26T%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[423,"impl-Mul%3CT%3E-for-MatrixSlice%3C\'a,+T%3E"],[424,"impl-Mul%3CPermutationMatrix%3CT%3E%3E-for-MatrixSlice%3C\'m,+T%3E"],[425,"impl-Mul%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[426,"impl-Mul%3C%26PermutationMatrix%3CT%3E%3E-for-%26MatrixSlice%3C\'m,+T%3E"],[427,"impl-Mul%3C%26Matrix%3CT%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[428,"impl-Mul%3CMatrixSlice%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[429,"impl-Mul%3C%26T%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[430,"impl-Mul%3C%26PermutationMatrix%3CT%3E%3E-for-MatrixSliceMut%3C\'m,+T%3E"],[431,"impl-Mul%3C%26Matrix%3CT%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[432,"impl-Mul%3C%26Matrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[433,"impl-Mul%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[434,"impl-Mul%3CMatrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[435,"impl-Mul%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[436,"impl-Mul%3C%26T%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[437,"impl-Mul%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[438,"impl-Mul%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[439,"impl-Mul%3CMatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[440,"impl-Mul%3CT%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[441,"impl-Mul%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[442,"impl-Mul%3CPermutationMatrix%3CT%3E%3E-for-MatrixSliceMut%3C\'m,+T%3E"],[443,"impl-Mul%3CMatrix%3CT%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[444,"impl-Mul%3CMatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[445,"impl-Mul%3CPermutationMatrix%3CT%3E%3E-for-%26MatrixSliceMut%3C\'m,+T%3E"],[446,"impl-Mul%3CT%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[447,"impl-Mul%3C%26PermutationMatrix%3CT%3E%3E-for-%26MatrixSliceMut%3C\'m,+T%3E"],[448,"impl-Mul%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[449,"impl-Mul%3C%26T%3E-for-Vector%3CT%3E"],[450,"impl-Mul%3CT%3E-for-Vector%3CT%3E"],[451,"impl-Mul%3C%26T%3E-for-%26Vector%3CT%3E"],[452,"impl-Mul%3CT%3E-for-%26Vector%3CT%3E"],[453,"impl-MulAssign%3C%26T%3E-for-Matrix%3CT%3E"],[454,"impl-MulAssign%3CT%3E-for-Matrix%3CT%3E"],[455,"impl-MulAssign%3CT%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[456,"impl-MulAssign%3C%26T%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[457,"impl-MulAssign%3CT%3E-for-Vector%3CT%3E"],[458,"impl-MulAssign%3C%26T%3E-for-Vector%3CT%3E"],[461,"impl-Neg-for-%26Matrix%3CT%3E"],[462,"impl-Neg-for-Matrix%3CT%3E"],[463,"impl-Neg-for-%26MatrixSlice%3C\'a,+T%3E"],[464,"impl-Neg-for-MatrixSlice%3C\'a,+T%3E"],[465,"impl-Neg-for-%26MatrixSliceMut%3C\'a,+T%3E"],[466,"impl-Neg-for-MatrixSliceMut%3C\'a,+T%3E"],[467,"impl-Neg-for-Vector%3CT%3E"],[468,"impl-Neg-for-%26Vector%3CT%3E"],[473,"impl-Not-for-Vector%3CT%3E"],[474,"impl-Not-for-%26Vector%3CT%3E"],[478,"impl-Rem%3CVector%3CT%3E%3E-for-%26Vector%3CT%3E"],[479,"impl-Rem-for-Vector%3CT%3E"],[480,"impl-Rem%3C%26Vector%3CT%3E%3E-for-%26Vector%3CT%3E"],[481,"impl-Rem%3C%26T%3E-for-Vector%3CT%3E"],[482,"impl-Rem%3CT%3E-for-Vector%3CT%3E"],[483,"impl-Rem%3C%26T%3E-for-%26Vector%3CT%3E"],[484,"impl-Rem%3CT%3E-for-%26Vector%3CT%3E"],[485,"impl-Rem%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[486,"impl-RemAssign%3CT%3E-for-Vector%3CT%3E"],[487,"impl-RemAssign%3C%26T%3E-for-Vector%3CT%3E"],[488,"impl-RemAssign%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[489,"impl-RemAssign-for-Vector%3CT%3E"],[517,"impl-Sub%3CMatrixSlice%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[518,"impl-Sub%3CMatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[519,"impl-Sub%3C%26MatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[520,"impl-Sub-for-Matrix%3CT%3E"],[521,"impl-Sub%3CT%3E-for-Matrix%3CT%3E"],[522,"impl-Sub%3CMatrix%3CT%3E%3E-for-%26Matrix%3CT%3E"],[523,"impl-Sub%3C%26MatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[524,"impl-Sub%3C%26Matrix%3CT%3E%3E-for-%26Matrix%3CT%3E"],[525,"impl-Sub%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[526,"impl-Sub%3C%26Matrix%3CT%3E%3E-for-Matrix%3CT%3E"],[527,"impl-Sub%3C%26MatrixSliceMut%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[528,"impl-Sub%3C%26T%3E-for-%26Matrix%3CT%3E"],[529,"impl-Sub%3C%26MatrixSlice%3C\'a,+T%3E%3E-for-%26Matrix%3CT%3E"],[530,"impl-Sub%3CT%3E-for-%26Matrix%3CT%3E"],[531,"impl-Sub%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[532,"impl-Sub%3C%26T%3E-for-Matrix%3CT%3E"],[533,"impl-Sub%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[534,"impl-Sub%3CT%3E-for-MatrixSlice%3C\'a,+T%3E"],[535,"impl-Sub%3CMatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[536,"impl-Sub%3CMatrix%3CT%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[537,"impl-Sub%3C%26Matrix%3CT%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[538,"impl-Sub%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[539,"impl-Sub%3C%26T%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[540,"impl-Sub%3C%26Matrix%3CT%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[541,"impl-Sub%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[542,"impl-Sub%3CMatrix%3CT%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[543,"impl-Sub%3C%26T%3E-for-MatrixSlice%3C\'a,+T%3E"],[544,"impl-Sub%3CMatrixSlice%3C\'b,+T%3E%3E-for-MatrixSlice%3C\'a,+T%3E"],[545,"impl-Sub%3CT%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[546,"impl-Sub%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[547,"impl-Sub%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[548,"impl-Sub%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSlice%3C\'a,+T%3E"],[549,"impl-Sub%3CMatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[550,"impl-Sub%3CMatrix%3CT%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[551,"impl-Sub%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[552,"impl-Sub%3C%26Matrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[553,"impl-Sub%3CT%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[554,"impl-Sub%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[555,"impl-Sub%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[556,"impl-Sub%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[557,"impl-Sub%3CMatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[558,"impl-Sub%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[559,"impl-Sub%3C%26Matrix%3CT%3E%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[560,"impl-Sub%3CMatrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[561,"impl-Sub%3C%26T%3E-for-%26MatrixSliceMut%3C\'a,+T%3E"],[562,"impl-Sub%3CT%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[563,"impl-Sub%3C%26T%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[564,"impl-Sub%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[565,"impl-Sub%3C%26T%3E-for-Vector%3CT%3E"],[566,"impl-Sub%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[567,"impl-Sub%3CT%3E-for-Vector%3CT%3E"],[568,"impl-Sub%3CVector%3CT%3E%3E-for-%26Vector%3CT%3E"],[569,"impl-Sub-for-Vector%3CT%3E"],[570,"impl-Sub%3C%26T%3E-for-%26Vector%3CT%3E"],[571,"impl-Sub%3C%26Vector%3CT%3E%3E-for-%26Vector%3CT%3E"],[572,"impl-Sub%3CT%3E-for-%26Vector%3CT%3E"],[573,"impl-SubAssign%3C%26MatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[574,"impl-SubAssign%3CMatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[575,"impl-SubAssign%3C%26MatrixSlice%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[576,"impl-SubAssign%3C%26T%3E-for-Matrix%3CT%3E"],[577,"impl-SubAssign%3CMatrixSliceMut%3C\'a,+T%3E%3E-for-Matrix%3CT%3E"],[578,"impl-SubAssign-for-Matrix%3CT%3E"],[579,"impl-SubAssign%3CT%3E-for-Matrix%3CT%3E"],[580,"impl-SubAssign%3C%26Matrix%3CT%3E%3E-for-Matrix%3CT%3E"],[581,"impl-SubAssign%3CMatrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[582,"impl-SubAssign%3C%26T%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[583,"impl-SubAssign%3C%26MatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[584,"impl-SubAssign%3CMatrixSliceMut%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[585,"impl-SubAssign%3CMatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[586,"impl-SubAssign%3C%26MatrixSlice%3C\'b,+T%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[587,"impl-SubAssign%3C%26Matrix%3CT%3E%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[588,"impl-SubAssign%3CT%3E-for-MatrixSliceMut%3C\'a,+T%3E"],[589,"impl-SubAssign%3C%26Vector%3CT%3E%3E-for-Vector%3CT%3E"],[590,"impl-SubAssign%3C%26T%3E-for-Vector%3CT%3E"],[591,"impl-SubAssign-for-Vector%3CT%3E"],[592,"impl-SubAssign%3CT%3E-for-Vector%3CT%3E"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
